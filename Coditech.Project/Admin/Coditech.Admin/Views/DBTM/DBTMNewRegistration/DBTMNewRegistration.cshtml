@using Coditech.Admin.ViewModel
@model DBTMNewRegistrationViewModel
@{
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    ViewBag.Title = "New Registration";
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel countryDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.Country.ToString(), DropdownName = "GeneralCountryMasterId", DropdownSelectedValue = Convert.ToString(Model.GeneralCountryMasterId), ChangeEvent = $"CoditechCommon.GetRegionListByCountryId()" };
    DropdownViewModel regionDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.Region.ToString(), DropdownName = "GeneralRegionMasterId", DropdownSelectedValue = Convert.ToString(Model.GeneralRegionMasterId), Parameter = Convert.ToString(Model.GeneralCountryMasterId), ChangeEvent = $"CoditechCommon.GetCityListByRegionId()" };
    DropdownViewModel cityDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.City.ToString(), DropdownName = "GeneralCityMasterId", DropdownSelectedValue = Convert.ToString(Model.GeneralCityMasterId), Parameter = Convert.ToString(Model.GeneralRegionMasterId) };

}
<div class="card-body p-0 auth-content" style="max-height: 550px; overflow-y: auto;">
    <ul class="nav-border nav nav-pills" role="tablist">
        <li class="nav-item">
            <a class="nav-link active fw-semibold" data-bs-toggle="tab" href="/dbtmnewregistration/newregistration" role="tab">New Registration</a>
        </li>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane active p-3" id="LogIn_Tab" role="tabpanel">
            @using (Html.BeginForm(actionName, "DBTMNewRegistration", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.CentreName, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.CentreName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.CentreName)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.FirstName, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @onkeypress = "return CoditechCommon.AllowOnlyAlphabetWithouSpacing()" })
                            @Html.ValidationMessageFor(x => x.FirstName)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.LastName, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @onkeypress = "return CoditechCommon.AllowOnlyAlphabetWithouSpacing()" })
                            @Html.ValidationMessageFor(x => x.LastName)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.EmailId, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.EmailId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.EmailId)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.CellPhone, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.CellPhone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.CellPhone)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.AddressLine1, new { @class = "form-label required" })
                            @Html.TextAreaFor(x => x.AddressLine1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.AddressLine1)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.AddressLine2, new { @class = "form-label" })
                            @Html.TextAreaFor(x => x.AddressLine2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.AddressLine2)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.GeneralCountryMasterId, new { @class = "form-label required" })
                            @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", countryDropdown)
                            @Html.ValidationMessageFor(x => x.GeneralCountryMasterId, null, new { id = $"errorGeneralCountryMasterId" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.GeneralRegionMasterId, new { @class = "form-label required" })
                            @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", regionDropdown)
                            @Html.ValidationMessageFor(x => x.GeneralRegionMasterId, null, new { id = $"errorGeneralRegionMasterId" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.GeneralCityMasterId, new { @class = "form-label required" })
                            @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", cityDropdown)
                            @Html.ValidationMessageFor(x => x.GeneralCityMasterId, null, new { id = $"errorGeneralCityMasterId" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.Pincode, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.Pincode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Pincode)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.DeviceSerialCode, new { @class = "form-label required" })
                            @Html.TextBoxFor(x => x.DeviceSerialCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.DeviceSerialCode)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="mb-3">
                            <label class="form-label"></label>
                            <button class="btn btn-primary w-70 waves-effect waves-light">AddMoreDevice<i class="fas fa-sign-in-alt ms-1"></i></button>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-3">
                            @Html.LabelFor(x => x.Password, new { @class = "form-label" })
                            <div class="input-group password-input-wraper">
                                @Html.TextBoxFor(x => x.Password, new { @class = "form-control password-input", type = "password", placeholder = "Password here..." })
                                <i class="fas fa-eye view-password"></i>
                            </div>
                            @Html.ValidationMessageFor(m => m.Password, null)
                            @Html.ValidationMessageFor(m => m.ErrorMessage, null)
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-3">
                            @Html.LabelFor(x => x.ConfirmPassword, new { @class = "form-label" })
                            <div class="input-group password-input-wraper">
                                @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control password-input", type = "password", placeholder = "Password here..." })
                                <i class="fas fa-eye view-password"></i>
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, null)
                            @Html.ValidationMessageFor(m => m.ErrorMessage, null)
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.TermsAndCondition, new { @class = "form-label" })
                            <div class="form-check">
                                @Html.CheckBoxFor(x => x.TermsAndCondition, new { @class = "form-check-input" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group row my-3">
                    <div class="col-sm-6">
                        <div class="custom-control custom-switch switch-success">
                            <div class="col-sm-6 text-end">
                                <button class="btn btn-primary w-100 waves-effect waves-light">Register<i class="fas fa-sign-in-alt ms-1"></i></button>
                            </div>
                            @*  <input type="checkbox" class="custom-control-input" id="customSwitchSuccess">
                        <label class="form-label text-muted" for="customSwitchSuccess">Remember me</label> *@
                        </div>
                    </div>
                    <div class="col-sm-6 text-end">
                        <a href="/user/login" class="text-muted font-13"><i class="dripicons-lock"></i>Log in</a>
                    </div>
                </div>

                @* <div class="form-group mb-0 row">
            <div class="col-sm-6 text-end">
            <button class="btn btn-primary w-100 waves-effect waves-light">Submit<i class="fas fa-sign-in-alt ms-1"></i></button>
            </div>
            </div> *@
            }
        </div>
    </div>
</div><script src="~/js/coditech/common/coditechcommon.js"></script>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".view-password").click(function () {
                $(this).toggleClass("fa fa-eye-slash");
                var inputAttribute = $('.password-input');
                if (inputAttribute.attr("type") == "password") {
                    inputAttribute.attr("type", "text");
                } else {
                    inputAttribute.attr("type", "password");
                }
            });
        });
    </script>
}