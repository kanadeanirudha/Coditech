@model OrganisationMasterViewModel
@{
    ViewBag.Title = "Organisation";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <!-- end page title end breadcrumb -->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="col">
                            <h4 class="card-title"><span>Organisation Details</span></h4>
                        </div>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.OrganisationMasterId)
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OrganisationName, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.OrganisationName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.OrganisationName)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OrganisationCode, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.OrganisationCode, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.OrganisationCode)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.EstablishmentCode, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.EstablishmentCode, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.EstablishmentCode)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.MissionStatement, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.MissionStatement, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.MissionStatement)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FounderMember, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.FounderMember, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FounderMember)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FoundationDatetime, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.FoundationDatetime, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FoundationDatetime)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.EmailId, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.EmailId, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.EmailId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Url, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.Url, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Url)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OfficeComment, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.OfficeComment, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.OfficeComment)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Address1, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Address1, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Address1)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.GeneralCityMasterId, new { @class = "form-label required" })
                                        @*  @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel() { DropdownType = DropdownTypeEnum.City.ToString(), DropdownName = "GeneralCityMasterId", DropdownSelectedValue = Model.GeneralCityMasterId.ToString()}) *@
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownType = DropdownTypeEnum.AllCities.ToString(),
                                   DropdownName = "GeneralCityMasterId",
                                   DropdownSelectedValue = Model.GeneralCityMasterId
                                    .ToString()
                               })
                                        @Html.ValidationMessageFor(x => x.GeneralCityMasterId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Pincode, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Pincode, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Pincode)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.MobileNumber, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.MobileNumber)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OfficePhone1, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.OfficePhone1, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.OfficePhone1)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.OfficePhone2, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.OfficePhone2, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.OfficePhone2)
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(function () {
            $('#FoundationDatetime').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                showWeekNumbers: false,
                drops: "auto",
                opens: "right",
                autoApply: false,
                "locale": {
                    "format": "DD-MM-YYYY",
                    "separator": " - ",
                    "applyLabel": "Apply",
                    "cancelLabel": "Cancel",
                    "fromLabel": "From",
                    "toLabel": "To",
                    "customRangeLabel": "Custom",
                    "weekLabel": "W",
                    "daysOfWeek": [
                        "Su",
                        "Mo",
                        "Tu",
                        "We",
                        "Th",
                        "Fr",
                        "Sa"
                    ],
                    "monthNames": [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                    ],
                    "firstDay": 1
                },
                minYear: 1901,
                maxYear: parseInt(moment().format('YYYY'), 10)
            },
                function (start, end, label) { });
        });
    </script>
}