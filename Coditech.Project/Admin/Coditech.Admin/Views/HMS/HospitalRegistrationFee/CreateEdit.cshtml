@using Coditech.Admin.Utilities;
@model HospitalRegistrationFeeViewModel
@{
    ViewBag.Title = Model.HospitalRegistrationFeeId > 0 ? "Update Hospital Registration Fee" : "Add Hospital Registration Fee";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "CentreCode", DropdownSelectedValue = Model.CentreCode, ChangeEvent = "", IsDisabled = Model.HospitalRegistrationFeeId > 0 };

}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.HospitalRegistrationFeeId > 0)
                                {
                                    <h4 class="card-title">Update Hospital Registration Fee: @Model.FirstName @Model.LastName </h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Hospital Registration Fee</h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.HospitalRegistrationFeeId)

                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.CentreCode, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                                        @Html.ValidationMessageFor(x => x.CentreCode)
                                        @if (Model.HospitalRegistrationFeeId > 0)
                                        {
                                            @Html.HiddenFor(x => x.CentreCode)
                                        }
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FromDate, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.FromDate, AdminGeneralHelper.DateFormatForTextBox(), new { @class = "form-control", @readonly = "true" })
                                        @Html.ValidationMessageFor(x => x.FromDate)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.UptoDate, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.UptoDate, AdminGeneralHelper.DateFormatForTextBox(), new { @class = "form-control", @readonly = "true" })
                                        @Html.ValidationMessageFor(x => x.UptoDate)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.RegistrationService, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownType = DropdownTypeEnum.InventoryGeneralServiecs.ToString(),
                                   DropdownName = "InventoryGeneralItemLineId",
                                   DropdownSelectedValue = Model.InventoryGeneralItemLineId.ToString()
                               })
                                        @Html.ValidationMessageFor(x => x.InventoryGeneralItemLineId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Charges, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Charges, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidDecimalNumeric()" })
                                        @Html.ValidationMessageFor(x => x.Charges)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.IsTaxExclusive, new { @class = "form-label" })
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.IsTaxExclusive, new { @class = "form-check-input" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            @* <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a> *@
                            <a href="@Url.Action("Cancel", controllerName, new { SelectedCentreCode=@Model.CentreCode})" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $("#FromDate").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "@AdminGeneralHelper.DateFormatForCalendar()",
                language: "en",
                autoSize: true,
                gotoCurrent: true,
                clearBtn: true,
                showButtonPanel: true,
                closeText: 'Clear',
                onClose: function (dateText, inst) {
                    if ($(window.event.srcElement).hasClass('ui-datepicker-close')) {
                        document.getElementById(this.id).value = '';
                    }
                },
                minDate: "-1M",
                maxDate: "+6M",
            });
            $("#UptoDate").datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: "@AdminGeneralHelper.DateFormatForCalendar()",
                language: "en",
                autoSize: true,
                gotoCurrent: true,
                clearBtn: true,
                showButtonPanel: true,
                closeText: 'Clear',
                onClose: function (dateText, inst) {
                    if ($(window.event.srcElement).hasClass('ui-datepicker-close')) {
                        document.getElementById(this.id).value = '';
                    }
                },
                minDate: "-1M",
                maxDate: "+6M",
            });
        });
    </script>

}

