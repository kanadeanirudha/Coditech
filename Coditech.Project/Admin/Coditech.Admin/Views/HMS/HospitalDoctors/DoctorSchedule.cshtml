@model HospitalDoctorsSchedulesViewModel
@{
    ViewBag.Title = "Doctor Appointment";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                <h4 class="card-title">Doctor Appointment : @Model.FirstName @Model.LastName </h4>
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.HospitalDoctorScheduleId)
                            @Html.HiddenFor(m => m.HospitalDoctorId)
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.HospitalDoctorId, new { @class = "form-label" })
                                        @*         @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                                    {
                                    DropdownType = DropdownTypeEnum.UnAssociatedEmployeeList.ToString(),
                                    DropdownName = "EmployeeId",
                                    DropdownSelectedValue = Model.EmployeeId
                                    .ToString(),
                                    Parameter = !string.IsNullOrEmpty(Model.SelectedCentreCode) ? $"{Model.SelectedCentreCode}~{Model.SelectedDepartmentId}" : ""

                                    }) *@
                                        @Html.ValidationMessageFor(x => x.HospitalDoctorId)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.HospitalWorkEnumId, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.HospitalWorkEnumId, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.HospitalWorkEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.WeekDayEnumId, new { @class = "form-label" })
                                        @* @Html.ListBoxFor(m => m.WeekDayEnumId, new SelectList(Model.AllWeekDays, "GeneralEnumaratorId", "EnumDisplayText"), new { @class = "selectpicker form-control " }) *@
                                        @Html.ValidationMessageFor(x => x.WeekDayEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.FromTime, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.FromTime, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.FromTime)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-3">
                                        <div class="md-3">
                                            @Html.LabelFor(x => x.UptoTime, new { @class = "form-label required" })
                                            @Html.TextBoxFor(x => x.UptoTime, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.UptoTime)
                                        </div>
                                    </div>
                                    <div class="col-lg-3">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.TimeSlot, new { @class = "form-label required " })
                                            @Html.TextBoxFor(x => x.TimeSlot, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.TimeSlot)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



