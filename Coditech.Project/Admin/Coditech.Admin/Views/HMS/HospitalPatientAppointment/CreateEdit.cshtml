@model HospitalPatientAppointmentViewModel
@{
    ViewBag.Title = Model.HospitalPatientAppointmentId > 0 ? "Update Hospital Patient Appointment" : "Add Hospital Patient Appointment";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "SelectedCentreCode", DropdownSelectedValue = Model.SelectedCentreCode, ChangeEvent = "CoditechCommon.GetHospitalDoctorsListByCentreCodeAndDepartmentId()" };
    // DropdownViewModel departmentDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.CentrewiseDepartment.ToString(), DropdownName = "SelectedDepartmentId", DropdownSelectedValue = Convert.ToString(Model.SelectedDepartmentId), Parameter = Model.SelectedCentreCode, ChangeEvent = "CoditechCommon.GetHospitalDoctorsListByCentreCodeAndDepartmentId()" };

}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.HospitalPatientAppointmentId > 0)
                                {
                                    <h4 class="card-title">Update Patient Appointment Details: @Model.FirstName @Model.LastName</h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Hospital Patient Appointment</h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.HospitalPatientAppointmentId)
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SelectedCentreCode, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                                        @Html.ValidationMessageFor(x => x.SelectedCentreCode)
                                    </div>
                                </div>
                               @*  <div class="col-lg-6">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.SelectedDepartmentId, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", departmentDropdown)
                                        @Html.ValidationMessageFor(x => x.SelectedDepartmentId)
                                    </div>
                                </div> *@

                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.MedicalSpecilizationEnumId, new { @class = "form-label required " })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.MedicalSpecilizationEnumId.ToString(),
                                   DropdownName = "MedicalSpecilizationEnumId",
                                   GroupCode = DropdownTypeEnum.MedicalSpecilization.ToString()
                               })
                                        @Html.ValidationMessageFor(x => x.MedicalSpecilizationEnumId)
                                    </div>
                                </div>
                                <div class="row">
                                @if (Model.HospitalPatientAppointmentId > 0)
                                {
                                    @Html.HiddenFor(x => x.HospitalDoctorId)
                                }
                                else
                                {
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.HospitalDoctorId, new { @class = "form-label required " })
                                            @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownType = DropdownTypeEnum.HospitalDoctorsList.ToString(),
                                   DropdownName = "HospitalDoctorId",
                                   DropdownSelectedValue = Model.HospitalDoctorId
                                    .ToString(),
                                   Parameter = !string.IsNullOrEmpty(Model.SelectedCentreCode) ? $"{Model.SelectedCentreCode}~{Model.SelectedDepartmentId}" : "" 

                               })
                                            @Html.ValidationMessageFor(x => x.HospitalDoctorId)
                                        </div>
                                    </div>
                                }
                                </div>
                                <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AppointmentDate, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.AppointmentDate, new { @class = "form-control", @readonly = "true" })
                                        @Html.ValidationMessageFor(x => x.AppointmentDate)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.AppointmentTypeEnumId, new { @class = "form-label"})
                                        @Html.TextBoxFor(x => x.AppointmentTypeEnumId, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.AppointmentTypeEnumId)
                                    </div>
                                </div>
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.RequestedTimeSlot, new { @class = "form-label"})
                                            @Html.TextBoxFor(x => x.RequestedTimeSlot, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.RequestedTimeSlot)
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.HospitalPatientAppointmentPurposeId, new { @class = "form-label"})
                                            @Html.TextBoxFor(x => x.HospitalPatientAppointmentPurposeId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.HospitalPatientAppointmentPurposeId)
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.ApprovalStatusEnumId, new { @class = "form-label" })
                                            @Html.TextBoxFor(x => x.ApprovalStatusEnumId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.ApprovalStatusEnumId)
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.HospitalPatientRegistrationId, new { @class = "form-label" })
                                            @Html.TextBoxFor(x => x.HospitalPatientRegistrationId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.HospitalPatientRegistrationId)
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.HospitalTempPersonId, new { @class = "form-label" })
                                            @Html.TextBoxFor(x => x.HospitalTempPersonId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.HospitalTempPersonId)
                                        </div>
                                    </div>
                                    <div class="col-lg-2">
                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.IsAttended, new { @class = "form-label required" })
                                            <div class="form-check">
                                                @Html.CheckBoxFor(x => x.IsAttended, new { @class = "form-check-input"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                               
                            </div>
                            <button type="submit" class="btn btn-success" data-test-selector="linkSave" onclick="HospitalDoctorLeaveSchedule.ValidateLeaveScheduleTime()">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Your custom scripts -->
@Html.Partial("_ValidationScriptsPartial")
<script src="~/js/coditech/hms/hospitaldoctorleaveschedule.js"></script>
<script src="~/js/layout/daterangepicker.js"></script>
@section scripts {
    <script>
        $(function () {
            $('#AppointmentDate').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                showWeekNumbers: false,
                drops: "auto",
                opens: "right",
                autoApply: true,
                "locale": {
        @* "format": "DD-MM-YYYY", *@
                "separator": " - ",
                "applyLabel": "Apply",
                "cancelLabel": "Cancel",
                "fromLabel": "From",
                "toLabel": "To",
                "customRangeLabel": "Custom",
                "weekLabel": "W",
                "daysOfWeek": [
                "Su",
                "Mo",
                "Tu",
                "We",
                "Th",
                "Fr",
                "Sa"
            ],
                "monthNames": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
            ],
                "firstDay": 1
                                                                                                                                                            },
            minYear: new Date().getFullYear(),
            maxYear: new Date().getFullYear() + 1
                                                                                                                                                        },
            function (start, end, label) { });
                                                                                                                                                    });
    </script>
}