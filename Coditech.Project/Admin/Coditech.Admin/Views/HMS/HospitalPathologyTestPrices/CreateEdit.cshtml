@model HospitalPathologyTestPricesViewModel
@{
    ViewBag.Title = Model.HospitalPathologyTestPricesId > 0 ? "Update Pathology Test Prices " : "Add Pathology Test Prices ";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel pathologyTestName = new DropdownViewModel() { DropdownType = DropdownTypeEnum.PathologyTestNameByPathologyPriceCategory.ToString(), DropdownName = "HospitalPathologyTestId", DropdownSelectedValue = Model.HospitalPathologyTestId.ToString(), Parameter = $"{Model.HospitalPathologyPriceCategoryEnumId}", ChangeEvent = "", IsDisabled = Model.HospitalPathologyTestPricesId > 0 };
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                @if (Model.HospitalPathologyTestPricesId > 0)
                                {
                                    <h4 class="card-title">Update Pathology Test Prices </h4>
                                }
                                else
                                {
                                    <h4 class="card-title">Create Pathology Test Prices </h4>
                                }
                            </div><!--end col-->
                        </div>  <!--end row-->
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.HospitalPathologyTestPricesId)
                            if (Model.HospitalPathologyTestPricesId > 0)
                            {
                                @Html.HiddenFor(m => m.HospitalPathologyTestId)
                                @Html.HiddenFor(m => m.HospitalPathologyPriceCategoryEnumId)
                            }
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.HospitalPathologyPriceCategory, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                               {
                                   DropdownSelectedValue = Model.HospitalPathologyPriceCategoryEnumId.ToString(),
                                   DropdownName = "HospitalPathologyPriceCategoryEnumId",
                                   GroupCode = DropdownTypeEnum.PathologyPriceCategory.ToString(),
                                   ChangeEvent = "HospitalPathologyTestPrices.GetPathologyTestNameByPathologyPriceCategory()",
                                   IsDisabled = Model.HospitalPathologyTestPricesId > 0
                               })
                                        @Html.ValidationMessageFor(x => x.HospitalPathologyPriceCategoryEnumId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.PathologyTestName, new { @class = "form-label required" })
                                        @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", pathologyTestName)
                                        @Html.ValidationMessageFor(x => x.HospitalPathologyTestId)
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.Price, new { @class = "form-label required" })
                                        @Html.TextBoxFor(x => x.Price, new { @class = "form-control", @onkeypress = "return CoditechCommon.ValidDecimalNumeric()" })
                                        @Html.ValidationMessageFor(x => x.Price)
                                    </div>
                                </div>
                                @* <div class="col-lg-4">
                            <div class="mb-3">
                            @Html.LabelFor(x => x.IsActive, new { @class = "form-label"})
                            <div class="form-check">
                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input"})
                            </div>
                            </div>
                            </div> *@
                            </div>
                            <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/coditech/HMS/HospitalPathologyTestPrices.js"></script>