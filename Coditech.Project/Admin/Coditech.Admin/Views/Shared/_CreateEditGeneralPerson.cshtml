@using Coditech.Admin.Utilities;
@model GeneralPersonViewModel
@{
    Layout = null;
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    string css = Model.PersonId > 0 ? "col-lg-10" : "col-lg-12";
}
<div class="@css">
    <div class="card">
        <div class="card-body">
            @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.PersonId)
                ;
                @Html.HiddenFor(m => m.UserType)
                ;
                <div class="row">
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.Title, new { @class = "form-label required"})
                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.Title)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.FirstName, new { @class = "form-label required"})
                            @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.FirstName)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.MiddleName, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.MiddleName, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.MiddleName)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.LastName, new { @class = "form-label required"})
                            @Html.TextBoxFor(x => x.LastName, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.LastName)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.GenderEnumId, new { @class = "form-label required"})
                            @Html.DropDownListFor(m => m.GenderEnumId, new SelectList(Model.GenderlList, "Value", "Text"), new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.GenderEnumId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.DateOfBirth, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.DateOfBirth)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.EmailId, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.EmailId, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.EmailId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.MobileNumber, new { @class = "form-label required"})
                            @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.MobileNumber)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.PhoneNumber, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.PhoneNumber)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.EmergencyContact, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.EmergencyContact, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.EmergencyContact)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.MaritalStatus, new { @class = "form-label"})
                            <select class="form-control" id="maritalStatus" name="MaritalStatus">
                                <option value="">-------- Select---------</option>
                                @foreach (var maritalStatus in ViewBag.MaritalStatusList)
                                {
                                    <option value="@maritalStatus.Value">@maritalStatus.Text</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(x => x.MaritalStatus)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.GeneralNationalityMasterId, new { @class = "form-label required"})
                            @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", new DropdownViewModel()
                        {
                        DropdownType = DropdownTypeEnum.Nationality.ToString(),
                        DropdownName = "GeneralNationalityMasterId",
                        DropdownSelectedValue = Model.PersonId
                        .ToString()
                        })
                            @Html.ValidationMessageFor(x => x.GeneralNationalityMasterId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.BloodGroup, new { @class = "form-label required"})
                            <select name="BloodGroup" class="form-control">
                                <option value="">-------- Select---------</option>
                                @foreach (var bloodGroup in ViewBag.BloodGroups)
                                {
                                    <option value="@bloodGroup">@bloodGroup</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(x => x.BloodGroup)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.IndentificationNumber, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.IndentificationNumber, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.IndentificationNumber)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.IndentificationEnumId, new { @class = "form-label"})
                            @Html.DropDownListFor(m => m.IndentificationEnumId, new SelectList(Model.IndentificationList, "Value", "Text"), new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.IndentificationEnumId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.PhotoMediaId, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.PhotoMediaId, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.PhotoMediaId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.BirthMark, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.BirthMark, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.BirthMark)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.AttendanceIntegrationId, new { @class = "form-label"})
                            @Html.TextBoxFor(x => x.AttendanceIntegrationId, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.AttendanceIntegrationId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.GeneralOccupationMasterId, new { @class = "form-label" })
                            @Html.TextBoxFor(x => x.GeneralOccupationMasterId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.GeneralOccupationMasterId)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.UserType, new { @class = "form-label required"})
                            @Html.TextBoxFor(x => x.UserType, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.UserType)
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-3">
                            @Html.LabelFor(x => x.PersonCode, new { @class = "form-label required"})
                            @Html.TextBoxFor(x => x.PersonCode, new { @class = "form-control"})
                            @Html.ValidationMessageFor(x => x.PersonCode)
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-success">@AdminResources.LabelSave</button>
                <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>@AdminResources.LabelCancel</a>
            }
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(function () {
            $('#DateOfBirth').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                showWeekNumbers: false,
                drops: "auto",
                opens: "right",
                autoApply: false,
                "locale": {
                    "format": "DD/MM/YYYY",
                    "separator": " - ",
                    "applyLabel": "Apply",
                    "cancelLabel": "Cancel",
                    "fromLabel": "From",
                    "toLabel": "To",
                    "customRangeLabel": "Custom",
                    "weekLabel": "W",
                    "daysOfWeek": [
                        "Su",
                        "Mo",
                        "Tu",
                        "We",
                        "Th",
                        "Fr",
                        "Sa"
                    ],
                    "monthNames": [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                    ],
                    "firstDay": 1
                },
                minYear: 1901,
                maxYear: parseInt(moment().format('YYYY'), 10)
            },
                function (start, end, label) { });
        });
    </script>
}