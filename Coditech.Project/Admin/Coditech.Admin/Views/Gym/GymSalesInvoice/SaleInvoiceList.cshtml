@model GymMemberSalesInvoiceListViewModel
@{
    ViewBag.Title = "Sale Invoice List";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
    DropdownViewModel centreDropdown = new DropdownViewModel() { DropdownType = DropdownTypeEnum.AccessibleCentre.ToString(), DropdownName = "SelectedCentreCode", DropdownSelectedValue = Model.SelectedCentreCode, ChangeEvent = "GymSalesInvoice.GetSaleInvoiceListByCentreCode('" + @controllerName + "','" + @actionName + "')" };
}
<!-- Page Content-->
<div class="page-content mt-5">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <span class="card-title">@AdminResources.LabelSalesInvoiceList</span>
                    </div>
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-1">
                                <label class = "form-label">@AdminResources.LabelCentre</label>
                            </div>
                            <div class="col-md-2">
                                @Html.Partial("~/Views/Shared/Control/_DropdownList.cshtml", centreDropdown)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(x => x.FromDate, "FromDate", new { @class = "form-label" })
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(x => x.FromDate, new { @class = "form-control" })
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(x => x.ToDate, "ToDate", new { @class = "form-label" })
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(x => x.ToDate, new { @class = "form-control" })
                            </div>
                            <div class="col-md-1">
                                <input type="button" class="btn btn-success" value="Show" id="ShowDataId" onclick="GymSalesInvoice.GetSaleInvoiceListByCentreCode('@controllerName','@actionName')" />
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <input type="hidden" id="SelectedParameter1" value="@Model.FromDate" />
                        <input type="hidden" id="SelectedParameter2" value="@Model.ToDate" />
                        <div id="DataTablesDivId" class="dataTables_wrapper dt-bootstrap5 no-footer">
                            @Html.Partial("~/Views/Gym/GymSalesInvoice/_SaleInvoiceList.cshtml", Model)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/coditech/gym/gymsalesinvoice.js"></script>
<!-- end page content -->
@section scripts {
    <script>
        $(function () {
            $('#FromDate').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                showWeekNumbers: false,
                drops: "auto",
                opens: "right",
                autoApply: true,
                "locale": {
                    // "format": "DD-MMM-YYYY",
                    "separator": " - ",
                    "applyLabel": "Apply",
                    "cancelLabel": "Cancel",
                    "fromLabel": "From",
                    "toLabel": "To",
                    "customRangeLabel": "Custom",
                    "weekLabel": "W",
                    "daysOfWeek": [
                        "Su",
                        "Mo",
                        "Tu",
                        "We",
                        "Th",
                        "Fr",
                        "Sa"
                    ],
                    "monthNames": [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                    ],
                    "firstDay": 1
                },
                // minYear: parseInt(moment().format('YYYY'), 10),
                // // maxYear: parseInt(moment().format('YYYY'), 10)
            },
                function (start, end, label) { });

            $('#ToDate').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                showWeekNumbers: false,
                drops: "auto",
                opens: "right",
                autoApply: true,
                "locale": {
                    // "format": "DD-MMM-YYYY",
                    "separator": " - ",
                    "applyLabel": "Apply",
                    "cancelLabel": "Cancel",
                    "fromLabel": "From",
                    "toLabel": "To",
                    "customRangeLabel": "Custom",
                    "weekLabel": "W",
                    "daysOfWeek": [
                        "Su",
                        "Mo",
                        "Tu",
                        "We",
                        "Th",
                        "Fr",
                        "Sa"
                    ],
                    "monthNames": [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                    ],
                    "firstDay": 1
                },
                // minYear: parseInt(moment().format('YYYY'), 10),
                // // maxYear: parseInt(moment().format('YYYY'), 10)
            },
                function (start, end, label) { });
        });
    </script>
}

