@using Coditech.Admin.ViewModel
@model GeneralDepartmentViewModel
@{
    ViewBag.Title = "Add Department";
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.RouteData.Values["action"].ToString();
}
<!-- Page Content-->
<div class="page-content">
    <div class="container-fluid">
        <!-- Page-Title -->
        <div class="row">
            <div class="col-sm-12">
                <div class="page-title-box">
                    <div class="row">
                        <div class="col">
                            @if (Model.GeneralDepartmentMasterId > 0)
                            {
                                <h4 class="page-title">Update Department</h4>
                            }
                            else
                            {
                                <h4 class="page-title">Create Department</h4>
                            }
                        </div><!--end col-->
                    </div><!--end row-->
                </div><!--end page-title-box-->
            </div><!--end col-->
        </div><!--end row-->
        <!-- end page title end breadcrumb -->
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post))
                        {
                            @Html.HiddenFor(m => m.GeneralDepartmentMasterId)
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.DepartmentName, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.DepartmentName, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.DepartmentName, null, new { @class = "required" })
                                    </div>
                                    <div class="mb-3">
                                        <div class="form-check">
                                            @Html.CheckBoxFor(x => x.WorkActivity, new { @class = "form-check-input" })
                                            @Html.LabelFor(x => x.WorkActivity, new { @class = "form-check-label" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.DepartmentShortCode, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.DepartmentShortCode, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.DepartmentShortCode, null, new { @class = "required" })
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        @Html.LabelFor(x => x.PrintShortDesc, new { @class = "form-label" })
                                        @Html.TextBoxFor(x => x.PrintShortDesc, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.PrintShortDesc, null, new { @class = "required" })
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">Save</button>
                            <a href="../@controllerName/List" class="btn btn-secondary"><i class="ft-x"></i>Cancel</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
